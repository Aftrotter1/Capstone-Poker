"""
Django settings for Capstone_Poker_Django project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from django.core.files.storage import default_storage
from google.oauth2 import service_account
import environ
import google.auth
from dotenv import load_dotenv
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/


env= environ.Env(DEBUG=(bool,False))
env_file= os.path.join(BASE_DIR,'.env')
env.read_env(env_file)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

# APPENGINE_URL = env('APPENGINE_URL')

SITE_DOMAIN = env("SITE_DOMAIN")        # e.g. localhost:8000 or capstone-poker.ue.r.appspot.com
HOST_SCHEME = env("HOST_SCHEME")        # 'http://' for dev or 'https://' for prod
SITE_ID = 2
ALLOWED_HOSTS = ['*']
#CRSF_TRUSTED_ORIGINS = [f'http://{APPENGINE_URL}',f'https://{APPENGINE_URL}']
CSRF_TRUSTED_ORIGINS = [
    f"{HOST_SCHEME}{SITE_DOMAIN}"
]

if DEBUG:
    # localâ€‘dev: plain HTTP
    SECURE_PROXY_SSL_HEADER = None
    SECURE_SSL_REDIRECT     = False
    SESSION_COOKIE_SECURE   = False
    CSRF_COOKIE_SECURE      = False
else:
    # production (behind HTTPS proxy)
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
    SECURE_SSL_REDIRECT     = True
    SESSION_COOKIE_SECURE   = True
    CSRF_COOKIE_SECURE      = True
    SECURE_HSTS_SECONDS     = 3600  # or whatever you like
SECURE_HSTS_SECONDS             = None
SECURE_HSTS_INCLUDE_SUBDOMAINS  = False
SECURE_FRAME_DENY               = False
USE_X_FORWARDED_HOST = True

GS_BUCKET_NAME= env('GS_BUCKET_NAME')
GS_PROJECT_ID= 'capstone-poker'

GOOGLE_APPLICATION_CREDENTIALS = env('GOOGLE_APPLICATION_CREDENTIALS')
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'poker.apps.PokerConfig',
    'django.contrib.sites',
    'microsoft_auth',
    'social_django',
    'mathfilters'
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'Capstone_Poker_Django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"poker")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'microsoft_auth.context_processors.microsoft',
                'django.template.context_processors.media',
            ],       
            # 'libraries':{
            #     'math_filters': 'Capstone_Poker_Django.templatetags.math_filters',
                
            #     }
        },
    },
]

WSGI_APPLICATION = 'Capstone_Poker_Django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

AUTHENTICATION_BACKENDS = [
    'microsoft_auth.backends.MicrosoftAuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend' 
]

DATABASES = {
    'default': env.db()
}

STORAGES = {
        "default": {
            "BACKEND": 'storages.backends.gcloud.GoogleCloudStorage',
            "OPTIONS": {
                "bucket_name":env('GS_BUCKET_NAME'),
            }
        },
         "staticfiles": {
        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
    },
    }

MICROSOFT_AUTH_CLIENT_ID = env("MICROSOFT_AUTH_CLIENT_ID")
MICROSOFT_AUTH_CLIENT_SECRET = env("MICROSOFT_AUTH_CLIENT_SECRET")
MICROSOFT_AUTH_TENANT_ID = env("MICROSOFT_AUTH_TENANT_ID")

MICROSOFT_AUTH_REDIRECT_PATH = "/microsoft/from-auth-redirect/"
MICROSOFT_AUTH_REDIRECT_URI = f"{HOST_SCHEME}{SITE_DOMAIN}{MICROSOFT_AUTH_REDIRECT_PATH}"
# include Microsoft Accounts, Office 365 Enterpirse and Azure AD accounts
MICROSOFT_AUTH_LOGIN_TYPE = 'ma'                                                                                                                                                                      


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = 'static/'
STATICFILES_DIRS= (os.path.join(BASE_DIR, 'static'),)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
MEDIA_ROOT = os.path.join(BASE_DIR, 'poker/bots')
MEDIA_URL = 'bots/'
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = 'login'
